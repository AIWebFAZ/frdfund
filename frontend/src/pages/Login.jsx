import React, { useState } from 'react'
import { useNavigate } from 'react-router-dom'
import axios from 'axios'
import config from '../config'

export default function Login(){
  const navigate = useNavigate()
  const [authType, setAuthType] = useState('password')
  const [username, setUsername] = useState('')
  const [password, setPassword] = useState('')
  const [error, setError] = useState('')
  const [loading, setLoading] = useState(false)

  async function onSubmit(e){
    e.preventDefault()
    setError('')
    setLoading(true)

    try {
      const response = await axios.post(`${config.API_URL}/api/auth/login`, {
        username,
        password,
        authType
      })

      if (response.data.success) {
        localStorage.setItem('token', response.data.token)
        localStorage.setItem('user', JSON.stringify(response.data.user))
        navigate('/dashboard')
      }
    } catch (err) {
      setError(err.response?.data?.message || '‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à')
    } finally {
      setLoading(false)
    }
  }

  return (
    <div className="page">
      <div className="login-card">
        <div className="brand">
          <img src="/logo.png" alt="logo" />
        </div>

        <div className="tabs">
          <button 
            className={authType === 'thaiid' ? 'tab active' : 'tab'}
            onClick={() => setAuthType('thaiid')}
          >
            ThaiID
          </button>
          <button 
            className={authType === 'ldap' ? 'tab active' : 'tab'}
            onClick={() => setAuthType('ldap')}
          >
            LDAP
          </button>
          <button 
            className={authType === 'password' ? 'tab active' : 'tab'}
            onClick={() => setAuthType('password')}
          >
            User/Password
          </button>
        </div>

        <h2>Log in</h2>
        <p className="subtitle">‡∏£‡∏∞‡∏ö‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ/‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô</p>

        {error && <div className="error-message">{error}</div>}

        {authType === 'password' ? (
          <form onSubmit={onSubmit} className="login-form">
            <label>‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
              <input 
                value={username} 
                onChange={e=>setUsername(e.target.value)} 
                placeholder="‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ" 
                required
              />
            </label>
            <label>‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô
              <input 
                type="password" 
                value={password} 
                onChange={e=>setPassword(e.target.value)} 
                placeholder="‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô"
                required
              />
            </label>
            <button className="btn primary" type="submit" disabled={loading}>
              {loading ? '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö...' : '‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö'}
            </button>
            
            <div style={{textAlign: 'center', marginTop: '15px'}}>
              <button 
                type="button"
                onClick={() => navigate('/forgot-password')}
                style={{
                  background: 'none',
                  border: 'none',
                  color: 'var(--primary)',
                  textDecoration: 'underline',
                  cursor: 'pointer',
                  fontSize: '14px'
                }}
              >
                ‡∏•‡∏∑‡∏°‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô?
              </button>
            </div>
          </form>
        ) : (
          <div className="not-implemented">
            <p>üöß ‡∏£‡∏∞‡∏ö‡∏ö {authType === 'thaiid' ? 'ThaiID' : 'LDAP'} ‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏û‡∏±‡∏í‡∏ô‡∏≤</p>
            <p>‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ User/Password ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö</p>
          </div>
        )}

        <div className="demo-accounts">
          <p><strong>‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ó‡∏î‡∏™‡∏≠‡∏ö:</strong></p>
          <small>
            admin/admin123 (‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•) | staff01/staff123 (‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà) | 
            pd_bangkok/pd123 (‡∏ú‡∏≠.‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î)
          </small>
        </div>
      </div>
    </div>
  )
}
