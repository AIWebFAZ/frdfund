import React, { useState, useEffect } from 'react'

export default function Step6Assets({ data, updateData }){
  const [assetType, setAssetType] = useState('corporate')
  const [assets, setAssets] = useState(data.assets || {
    type: 'corporate',
    total_assets: 0,
    total_liabilities: 0,
    asset_details: '',
    liability_details: ''
  })

  useEffect(() => {
    updateData('assets', assets)
  }, [assets])

  function handleChange(field, value){
    setAssets(prev => ({ ...prev, [field]: value }))
  }

  return (
    <div className="step-content">
      <h2>‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 6: ‡∏™‡∏¥‡∏ô‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡πÅ‡∏•‡∏∞‡∏´‡∏ô‡∏µ‡πâ‡∏™‡∏¥‡∏ô</h2>
      <p className="step-description">‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡πÅ‡∏•‡∏∞‡∏†‡∏≤‡∏£‡∏∞‡∏´‡∏ô‡∏µ‡πâ‡∏™‡∏¥‡∏ô‡∏Ç‡∏≠‡∏á‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏£</p>

      <div className="tabs">
        <button 
          className={assetType === 'corporate' ? 'tab active' : 'tab'}
          onClick={() => { setAssetType('corporate'); handleChange('type', 'corporate') }}
        >
          ‡∏ô‡∏¥‡∏ï‡∏¥‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•
        </button>
        <button 
          className={assetType === 'non-corporate' ? 'tab active' : 'tab'}
          onClick={() => { setAssetType('non-corporate'); handleChange('type', 'non-corporate') }}
        >
          ‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏ô‡∏¥‡∏ï‡∏¥‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•
        </button>
      </div>

      <div className="asset-form">
        <div className="form-row">
          <div className="form-group">
            <label>‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô (‡∏ö‡∏≤‡∏ó)</label>
            <input 
              type="number"
              value={assets.total_assets}
              onChange={e => handleChange('total_assets', parseFloat(e.target.value) || 0)}
              placeholder="0.00"
            />
          </div>

          <div className="form-group">
            <label>‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏´‡∏ô‡∏µ‡πâ‡∏™‡∏¥‡∏ô (‡∏ö‡∏≤‡∏ó)</label>
            <input 
              type="number"
              value={assets.total_liabilities}
              onChange={e => handleChange('total_liabilities', parseFloat(e.target.value) || 0)}
              placeholder="0.00"
            />
          </div>
        </div>

        <div className="form-group">
          <label>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô</label>
          <textarea 
            value={assets.asset_details}
            onChange={e => handleChange('asset_details', e.target.value)}
            placeholder="‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô ‡πÄ‡∏ä‡πà‡∏ô ‡∏ó‡∏µ‡πà‡∏î‡∏¥‡∏ô ‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£ ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏±‡∏Å‡∏£ ‡∏Ø‡∏•‡∏Ø"
            rows="5"
          />
        </div>

        <div className="form-group">
          <label>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏´‡∏ô‡∏µ‡πâ‡∏™‡∏¥‡∏ô</label>
          <textarea 
            value={assets.liability_details}
            onChange={e => handleChange('liability_details', e.target.value)}
            placeholder="‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏´‡∏ô‡∏µ‡πâ‡∏™‡∏¥‡∏ô ‡πÄ‡∏ä‡πà‡∏ô ‡πÄ‡∏á‡∏¥‡∏ô‡∏Å‡∏π‡πâ ‡∏´‡∏ô‡∏µ‡πâ‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏• ‡∏´‡∏ô‡∏µ‡πâ‡∏™‡∏ñ‡∏≤‡∏ö‡∏±‡∏ô ‡∏Ø‡∏•‡∏Ø"
            rows="5"
          />
        </div>

        <div className="summary-box">
          <h4>‡∏™‡∏£‡∏∏‡∏õ‡∏ê‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô</h4>
          <p>‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏¥‡∏ô: <strong>{assets.total_assets.toLocaleString()} ‡∏ö‡∏≤‡∏ó</strong></p>
          <p>‡∏´‡∏ô‡∏µ‡πâ‡∏™‡∏¥‡∏ô: <strong>{assets.total_liabilities.toLocaleString()} ‡∏ö‡∏≤‡∏ó</strong></p>
          <p>‡∏™‡∏¥‡∏ô‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå‡∏™‡∏∏‡∏ó‡∏ò‡∏¥: <strong>{(assets.total_assets - assets.total_liabilities).toLocaleString()} ‡∏ö‡∏≤‡∏ó</strong></p>
        </div>
      </div>

      <div className="info-box">
        üí° ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏™‡∏£‡∏¥‡∏° ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ç‡πâ‡∏≤‡∏°‡πÑ‡∏õ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ñ‡∏±‡∏î‡πÑ‡∏õ‡πÑ‡∏î‡πâ
      </div>
    </div>
  )
}
